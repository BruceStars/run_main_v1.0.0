var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var SignUI_1 = require("./script/SignUI");
var StartUI_1 = require("./script/StartUI");
var GameUI_1 = require("./script/GameUI");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/SignUI.ts", SignUI_1.default);
        reg("script/StartUI.ts", StartUI_1.default);
        reg("script/GameUI.ts", GameUI_1.default);
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "test/Start.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/GameUI":6,"./script/SignUI":9,"./script/StartUI":10}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BallScript = /** @class */ (function (_super) {
    __extends(BallScript, _super);
    function BallScript() {
        var _this = _super.call(this) || this;
        _this.people = _this.owner;
        return _this;
    }
    /**
     * 当其他碰撞器进入绑定物体碰撞器时触发（子弹进入物品时）
     * 注：如相对移动速度过快，可能直接越过
     */
    BallScript.prototype.onTriggerEnter = function (other) {
        //  console.log("触发器enter" + this.owner.name);
        // console.log(other);
    };
    /**
     * 当其他碰撞器进入绑定物体碰撞器后逐帧触发（子弹在物品内时）
     * 注：如相对移动速度过快，可能直接越过
     */
    BallScript.prototype.onTriggerStay = function (other) {
        // console.log("触发器stay" + this.owner.name );
    };
    /**
     * 当其他碰撞器退出绑定物体碰撞器时逐帧触发（子弹穿出物品时）
     * 注：如相对移动速度过快，可能直接越过
     */
    BallScript.prototype.onTriggerExit = function (other) {
        console.log("触发器exit" + this.owner.name);
    };
    /**
     * 与触发器相同
     */
    BallScript.prototype.onCollisionEnter = function (collision) {
        // console.log("碰撞器enter" + this.owner.name);
        // console.log(this.owner);
        // var animator = this.owner.getChildAt(0).getComponent(Laya.Animator) as Laya.Animator;
        // var ani = this.owner.getChildAt(0).getComponent(Laya.Animator);
        // console.log(ani);
        //        animator.play("Dead");
        //    Laya.timer.pause();
    };
    BallScript.prototype.onCollisionStay = function (collision) {
        // console.log("碰撞器stay" + this.owner.name );
    };
    BallScript.prototype.onCollisionExit = function (collision) {
        // alert("碰撞器exit" + this.owner.name);
    };
    BallScript.prototype.onDisable = function () {
        alert("脚本已被移除");
    };
    return BallScript;
}(Laya.Script3D));
exports.BallScript = BallScript;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CarScript = /** @class */ (function (_super) {
    __extends(CarScript, _super);
    function CarScript() {
        return _super.call(this) || this;
    }
    /**
     * 当其他碰撞器进入绑定物体碰撞器时触发（子弹进入物品时）
     * 注：如相对移动速度过快，可能直接越过
     */
    CarScript.prototype.onTriggerEnter = function (other) {
        //  console.log("触发器enter" + this.owner.name);
        //  console.log(this.owner);
        Laya.LocalStorage.setItem("gameover", "yes");
    };
    /**
     * 当其他碰撞器进入绑定物体碰撞器后逐帧触发（子弹在物品内时）
     * 注：如相对移动速度过快，可能直接越过
     */
    CarScript.prototype.onTriggerStay = function (other) {
        // console.log("触发器stay" + this.owner.name );
    };
    /**
     * 当其他碰撞器退出绑定物体碰撞器时逐帧触发（子弹穿出物品时）
     * 注：如相对移动速度过快，可能直接越过
     */
    CarScript.prototype.onTriggerExit = function (other) {
        // console.log("触发器exit" + this.owner.name);
    };
    /**
     * 与触发器相同
     */
    CarScript.prototype.onCollisionEnter = function (collision) {
        // console.log("碰撞器enter" + this.owner.name);
        // console.log(this.owner);
        // var animator = this.owner.getChildAt(0).getComponent(Laya.Animator) as Laya.Animator;
        // var ani = this.owner.getChildAt(0).getComponent(Laya.Animator);
        // console.log(ani);
        //    animator.play("Dead");
        Laya.LocalStorage.setItem("gameover", "yes");
    };
    CarScript.prototype.onCollisionStay = function (collision) {
        // console.log("碰撞器stay" + this.owner.name );
    };
    CarScript.prototype.onCollisionExit = function (collision) {
        // console.log("碰撞器exit" + this.owner.name);
    };
    CarScript.prototype.onDisable = function () {
        console.log("脚本已被移除");
    };
    return CarScript;
}(Laya.Script3D));
exports.CarScript = CarScript;
},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CoinScript = /** @class */ (function (_super) {
    __extends(CoinScript, _super);
    function CoinScript() {
        return _super.call(this) || this;
    }
    /**
     * 当其他碰撞器进入绑定物体碰撞器时触发（子弹进入物品时）
     * 注：如相对移动速度过快，可能直接越过
     */
    CoinScript.prototype.onTriggerEnter = function (other) {
        //  console.log("触发器enter" + this.owner.name);
        var score = parseInt(Laya.LocalStorage.getItem("score"));
        var scoreAfter = score + 1;
        Laya.LocalStorage.setItem("score", scoreAfter.toString());
        this.owner.removeSelf();
        // console.log(other);
    };
    /**
     * 当其他碰撞器进入绑定物体碰撞器后逐帧触发（子弹在物品内时）
     * 注：如相对移动速度过快，可能直接越过
     */
    CoinScript.prototype.onTriggerStay = function (other) {
        // console.log("触发器stay" + this.owner.name );
    };
    /**
     * 当其他碰撞器退出绑定物体碰撞器时逐帧触发（子弹穿出物品时）
     * 注：如相对移动速度过快，可能直接越过
     */
    CoinScript.prototype.onTriggerExit = function (other) {
        // console.log("触发器exit" + this.owner.name);
    };
    /**
     * 与触发器相同
     */
    CoinScript.prototype.onCollisionEnter = function (collision) {
        // console.log("碰撞器enter" + this.owner.name);
        // console.log(this.owner);
        // var animator = this.owner.getChildAt(0).getComponent(Laya.Animator) as Laya.Animator;
        // var ani = this.owner.getChildAt(0).getComponent(Laya.Animator);
        // console.log(ani);
        //        animator.play("Dead");
        //    Laya.timer.pause();
        var score = parseInt(Laya.LocalStorage.getItem("score"));
        var scoreAfter = score + 1;
        Laya.LocalStorage.setItem("score", scoreAfter.toString());
        this.owner.removeSelf();
    };
    CoinScript.prototype.onCollisionStay = function (collision) {
        // console.log("碰撞器stay" + this.owner.name );
    };
    CoinScript.prototype.onCollisionExit = function (collision) {
        // alert("碰撞器exit" + this.owner.name);
    };
    CoinScript.prototype.onDisable = function () {
        // alert("脚本已被移除");
    };
    return CoinScript;
}(Laya.Script3D));
exports.CoinScript = CoinScript;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var HomeUI_1 = require("./HomeUI");
// import StartUI from './StartUI'
var BallScript_1 = require("./BallScript");
var CarScript_1 = require("./CarScript");
var CoinScript_1 = require("./CoinScript");
var RocketScript_1 = require("./RocketScript");
// 方向控制器
var x = 0;
var y = 0;
var c = 0;
var a = -5;
var b = 0;
var c = 0;
var r = 0;
//加载字典
var centerX = 0;
var loadLength = 0;
var distanceTotal = 0.0;
var distanceBuildTotal = 0.0;
var buildZ = 160;
var left = [["0", "1", "2"], ["0", "1", "2"], ["0", "0", "0"], ["0", "1", "0"], ["0", "3", "3"], ["1", "3", "2"], ["1", "0", "3"]];
var center = [["1", "0", "0"], ["2", "0", "1"], ["2", "0", "1"], ["2", "1", "0"], ["3", "0", "3"], ["3", "1", "3"], ["3", "0", "0"]];
var right = [["2", "2", "0"], ["2", "2", "1"], ["1", "2", "0"], ["2", "1", "0"], ["3", "3", "0"], ["3", "1", "0"], ["1", "3", "1"]];
var obstacleTotal = [];
var obstacleSpride = [];
//1 钟  2 icbc
var buildingRandomArr = ["0", "1", "2", "3"];
var leftBd = -120;
var rightBd = -120;
var buildingArr = [];
var build3DArr = [];
var roadArr = [];
var rocketCoinArr = [];
var roadCurrent = 0;
var roadTotal = 0;
var roadChangeNumber = -273;
var lightArr = [];
var lightTotal = -120;
var rocketState = false;
var rocketTotal = 0;
var gameIsOver = false;
var directionInt = 1;
/**
 * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联
 * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果
 * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。
 */
var GameUI = /** @class */ (function (_super) {
    __extends(GameUI, _super);
    function GameUI() {
        var _this = _super.call(this) || this;
        // Laya.Shader3D.debugMode = true;
        //初始化引擎
        // Laya3D.init(0, 0);
        //适配模式
        // Laya.stage.scaleMode = Laya.Stage.SCALE_FULL;
        // Laya.stage.screenMode = Laya.Stage.SCREEN_NONE;
        //开启统计信息
        Laya.Stat.show();
        //添加3D场景-----------------------
        _this.sceneRun = new Laya.Scene3D();
        Laya.stage.addChild(_this.sceneRun);
        Laya.URL.basePath = "https://img.apple.hi.cn/";
        Laya.LocalStorage.setItem("score", "0");
        Laya.LocalStorage.setItem("gameover", "no");
        _this.txt = new Laya.Text();
        _this.txt.pos(300, 10, false);
        _this.txt.width = 500;
        //设置文本内容
        _this.txt.text = "hello_world";
        //设置文本颜色
        _this.txt.color = "#ffffff";
        //设置文本字体
        _this.txt.font = "Ya Hei";
        //设置字体大小
        _this.txt.fontSize = 32;
        //设置文本取背景
        _this.txt.bgColor = "#c30c30";
        //设置文本框的颜色
        _this.txt.borderColor = "#23cfcf";
        //设置粗体、斜体
        _this.txt.bold = true;
        //设置斜体
        _this.txt.italic = true;
        Laya.stage.addChild(_this.txt);
        //创建摄像机(横纵比，近距裁剪，远距裁剪)-----
        _this.camera = new Laya.Camera(0, 5, 1000);
        //加载到场景
        _this.sceneRun.addChild(_this.camera);
        //移动摄像机位置
        _this.camera.transform.position = new Laya.Vector3(-2, 13, 60 + a);
        //旋转摄像机角度
        _this.camera.transform.rotate(new Laya.Vector3(0, 0, 0), true, false);
        _this.camera.clearFlag = Laya.BaseCamera.CLEARFLAG_SKY;
        Laya.BaseMaterial.load("res/DawnDuskSky/SkyBox.lmat", Laya.Handler.create(_this, function (mat) {
            var skyRenderer = new Laya.SkyRenderer();
            skyRenderer.mesh = Laya.SkyBox.instance;
            skyRenderer.material = mat;
            this.camera.skyRenderer = skyRenderer;
        }));
        //创建方向光 ------------------------
        var light = _this.sceneRun.addChild(new Laya.DirectionLight());
        //移动灯光位置
        light.transform.translate(new Laya.Vector3(0, 2, 5));
        //调整灯光方向
        light.transform.worldMatrix.setForward(new Laya.Vector3(0.5, -1, 0));
        //设置灯光漫反射颜色
        light.diffuseColor = new Laya.Vector3(0.3, 0.3, 0.3);
        //设置灯光环境色
        _this.sceneRun.ambientColor = new Laya.Vector3(1, 1, 1);
        Laya.stage.on(Laya.Event.MOUSE_DOWN, _this, function aaa() {
            x = Laya.stage.mouseX;
            y = Laya.stage.mouseY;
            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.bbb);
        });
        var mainArr = [{ url: "res/dimian12/layaScene.lh" },
            { url: "res/bigTaxi3/layaScene.lh" },
            { url: "res/taxi6/layaScene.lh" },
            { url: "res/zhong/layaScene.lh" },
            { url: "res/guoqi/layaScene.lh" },
            { url: "res/icbc/layaScene.lh" },
            { url: "res/dog1312311/layaScene.lh" },
            { url: "res/coin/layaScene.lh" },
            { url: "res/zgh/layaScene.lh" },
            { url: "res/chinaBank/example.lh" },
            { url: "res/tree/layaScene.lh" },
            { url: "res/light/layaScene.lh" },
            { url: "res/rocket/layaScene.lh" },
        ];
        Laya.loader.create(mainArr, Laya.Handler.create(_this, _this.onloadFinish), Laya.Handler.create(_this, _this.onloadProgress));
        // Laya.loader.create("res/lajiche/layaScene.lh",Laya.Handler.create(this,function(p){
        //     //实例化加载并创建好的3D对象
        //     var road:Laya.MeshSprite3D = Laya.loader.getRes("res/lajiche/layaScene.lh");
        //     // road.addComponent(CarScript);
        //    road.transform.position = new Laya.Vector3(-3.5,8,-200);
        //    road.transform.scale = new Laya.Vector3(2,2,2);
        //    road.name = "car";
        // //    scene.addChild(road);
        //    }));
        //建筑群
        Laya.stage.on(Laya.Event.MOUSE_DOWN, _this, function aaa() {
            x = Laya.stage.mouseX;
            y = Laya.stage.mouseY;
            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.bbb);
        });
        return _this;
    }
    //进度条显示
    GameUI.prototype.onloadProgress = function (onloadIng) {
        console.log(Math.floor(onloadIng.toFixed(2) * 555));
        var proData = Math.floor(onloadIng.toFixed(2) * 555);
        this.progressIng.width = proData;
        if (proData == 555) {
            console.log("隐藏加载页");
            this.progressBox.visible = false;
        }
    };
    //素材加载完成回调
    GameUI.prototype.onloadFinish = function () {
        this.HomeView();
        this.dimianLoad();
        this.bigTaxiLoad();
        this.taxiLoad();
        this.zhongLoad();
        this.guoqiLoad();
        this.icbcLoad();
        this.coinLoad();
        this.dogLoad();
        this.zghLoad();
        this.chinaBankLoad();
        // this.treeLoad();
        this.lightLoad();
        this.rocketLoad();
    };
    GameUI.prototype.HomeView = function () {
        var inView = new HomeUI_1.default();
        // inView.popup(true) 
        console.log(inView);
        Laya.stage.addChild(inView);
    };
    GameUI.prototype.buildingAction = function (lorR, number) {
        if (lorR == 0) {
            if (number == 0) {
                var zhongBuilding1 = this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.zhongBuilding, this.sceneRun, false, new Laya.Vector3(-35, 28, leftBd - 0)));
                leftBd = leftBd - 39;
                build3DArr.push(zhongBuilding1);
            }
            else if (number == 1) {
                var icbc1 = Laya.Sprite3D.instantiate(this.icbc, this.sceneRun, false, new Laya.Vector3(-20, 2.2, leftBd + 15));
                this.sceneRun.addChild(icbc1);
                icbc1.transform.rotate(new Laya.Vector3(0, 180, 0), true, false);
                leftBd = leftBd - 24;
                build3DArr.push(icbc1);
            }
            else if (number == 2) {
                var guoqi1 = Laya.Sprite3D.instantiate(this.guoqi, this.sceneRun, false, new Laya.Vector3(-25, 1, leftBd + 18));
                this.sceneRun.addChild(guoqi1);
                leftBd = leftBd - 23;
                guoqi1.transform.rotate(new Laya.Vector3(0, 180, 0), true, false);
                build3DArr.push(guoqi1);
            }
            else if (number == 3) {
                var zgh1 = Laya.Sprite3D.instantiate(this.zgh, this.sceneRun, false, new Laya.Vector3(-24, 1, leftBd + 19));
                this.sceneRun.addChild(zgh1);
                zgh1.transform.rotate(new Laya.Vector3(0, 180, 0), true, false);
                leftBd = leftBd - 24;
                build3DArr.push(zgh1);
            }
            else if (number == 4) {
                var chinaBank1 = Laya.Sprite3D.instantiate(this.chinaBank, this.sceneRun, false, new Laya.Vector3(-23, 10, leftBd + 19));
                this.sceneRun.addChild(chinaBank1);
                chinaBank1.transform.rotate(new Laya.Vector3(0, 180, 0), true, false);
                leftBd = leftBd - 13;
                build3DArr.push(chinaBank1);
            }
        }
        else if (lorR == 1) {
            if (number == 0) {
                var zhongBuilding2 = Laya.Sprite3D.instantiate(this.zhongBuilding, this.sceneRun, false, new Laya.Vector3(28, 28, rightBd - 0));
                this.sceneRun.addChild(zhongBuilding1);
                zhongBuilding2.transform.rotate(new Laya.Vector3(0, 180, 0), true, false);
                rightBd = rightBd - 40;
                build3DArr.push(zhongBuilding1);
            }
            else if (number == 1) {
                var icbc1 = Laya.Sprite3D.instantiate(this.icbc, this.sceneRun, false, new Laya.Vector3(11.8, 2.2, rightBd + 4));
                this.sceneRun.addChild(icbc1);
                rightBd = rightBd - 25;
                build3DArr.push(icbc1);
            }
            else if (number == 2) {
                var guoqi1 = Laya.Sprite3D.instantiate(this.guoqi, this.sceneRun, false, new Laya.Vector3(17, 1, rightBd));
                this.sceneRun.addChild(guoqi1);
                rightBd = rightBd - 22;
                build3DArr.push(guoqi1);
            }
            else if (number == 3) {
                var zgh1 = Laya.Sprite3D.instantiate(this.zgh, this.sceneRun, false, new Laya.Vector3(14, 1, rightBd));
                this.sceneRun.addChild(zgh1);
                rightBd = rightBd - 24;
                build3DArr.push(zgh1);
            }
            else if (number == 4) {
                var chinaBank1 = Laya.Sprite3D.instantiate(this.chinaBank, this.sceneRun, false, new Laya.Vector3(-23, 10, rightBd));
                this.sceneRun.addChild(chinaBank1);
                rightBd = rightBd - 13;
                build3DArr.push(chinaBank1);
            }
        }
    };
    //var buildingRandomArr
    //         var buildingArr = [];
    // var build3DArr = [];
    // var mainArr = [{url:"res/dimian12/layaScene.lh"},
    // {url:"res/bigTaxi3/layaScene.lh"},
    // {url:"res/taxi6/layaScene.lh"},
    // {url:"res/zhong/layaScene.lh"},
    // {url:"res/guoqi/layaScene.lh"},
    // {url:"res/icbc/layaScene.lh"},
    // {url:"res/dog1312311/layaScene.lh"},
    // {url:"res/coin/layaScene.lh"}];
    GameUI.prototype.lightLoad = function () {
        this.lamp = Laya.loader.getRes("res/light/layaScene.lh");
        this.lamp.transform.position = new Laya.Vector3(-15, 0, -30);
        this.lamp.transform.scale = new Laya.Vector3(0.6, 0.6, 0.6);
        this.sceneRun.addChild(this.lamp);
        var lamp1 = this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.lamp, this.sceneRun, false, new Laya.Vector3(8, 0, -30)));
    };
    GameUI.prototype.treeLoad = function () {
        this.tree = Laya.loader.getRes("res/tree/layaScene.lh");
        this.tree.transform.position = new Laya.Vector3(20, 0, 40);
        this.tree.transform.scale = new Laya.Vector3(30, 30, 30);
        this.sceneRun.addChild(this.tree);
    };
    GameUI.prototype.chinaBankLoad = function () {
        this.chinaBank = Laya.loader.getRes("res/chinaBank/example.lh");
        this.chinaBank.transform.position = new Laya.Vector3(15, 10, -90);
        this.chinaBank.transform.scale = new Laya.Vector3(0.4, 0.4, 0.4);
        this.sceneRun.addChild(this.chinaBank);
        var chinaBank1 = Laya.Sprite3D.instantiate(this.chinaBank, this.sceneRun, false, new Laya.Vector3(-23, 10, -90));
        this.sceneRun.addChild(chinaBank1);
        chinaBank1.transform.rotate(new Laya.Vector3(0, 180, 0), true, false);
    };
    GameUI.prototype.dimianLoad = function () {
        //实例化加载并创建好的3D对象
        var road = Laya.loader.getRes("res/dimian12/layaScene.lh");
        road.transform.position = new Laya.Vector3(0, 0, 0);
        road.transform.scale = new Laya.Vector3(1, 1, 1);
        this.sceneRun.addChild(road);
        roadArr.push(road);
        //克隆sprite3d
        var layaMonkey_clone1 = this.sceneRun.addChild(Laya.Sprite3D.instantiate(road, this.sceneRun, false, new Laya.Vector3(0, 0, -136.5)));
        //克隆sprite3d
        roadArr.push(layaMonkey_clone1);
        var layaMonkey_clone2 = this.sceneRun.addChild(Laya.Sprite3D.instantiate(road, null, false, new Laya.Vector3(0, 0, -273)));
        // camera.transform.lookAt(road.transform.position,new Laya.Vector3(0,0,0));
        roadArr.push(layaMonkey_clone2);
    };
    GameUI.prototype.bigTaxiLoad = function () {
        //实例化加载并创建好的3D对象
        this.bigTaxi = Laya.loader.getRes("res/bigTaxi3/layaScene.lh");
        console.log(this.bigTaxi);
        this.bigTaxi.transform.position = new Laya.Vector3(-3.3, 2, -100);
        this.bigTaxi.transform.scale = new Laya.Vector3(3, 3, 3);
        this.sceneRun.addChild(this.bigTaxi);
        this.bigTaxi.addComponent(Laya.PhysicsCollider);
        var rigid = this.bigTaxi.addComponent(Laya.Rigidbody3D);
        // //有刚体的shape要加在刚体上
        rigid.colliderShape = new Laya.BoxColliderShape(1, 0.6, 2.4);
        // //添加一个重量
        rigid.mass = 20;
        // //给球添加弹力
        rigid.restitution = 0.01;
        // // 给球添加滚动摩擦力
        rigid.rollingFriction = 0.2;
        rigid.isKinematic = true;
        //    rigid.isTrigger = true;
        //给球添加脚本
        this.bigTaxi.addComponent(CarScript_1.CarScript);
        //给球一个名字 方便识别
        this.bigTaxi.name = "bigtaxi";
    };
    GameUI.prototype.zghLoad = function () {
        this.zgh = Laya.loader.getRes("res/zgh/layaScene.lh");
        this.zgh.transform.position = new Laya.Vector3(17, 1, 10.2);
        this.zgh.transform.scale = new Laya.Vector3(0.4, 0.4, 0.4);
        this.sceneRun.addChild(this.zgh);
        var zgh1 = Laya.Sprite3D.instantiate(this.zgh, this.sceneRun, false, new Laya.Vector3(-24, 1, 34.5));
        this.sceneRun.addChild(zgh1);
        zgh1.transform.rotate(new Laya.Vector3(0, 180, 0), true, false);
    };
    GameUI.prototype.taxiLoad = function () {
        //实例化加载并创建好的3D对象
        this.taxi = Laya.loader.getRes("res/taxi6/layaScene.lh");
        console.log(this.taxi);
        this.taxi.transform.position = new Laya.Vector3(3, 1, -100);
        this.taxi.transform.scale = new Laya.Vector3(2.4, 2.4, 2.4);
        this.taxi.transform.rotate(new Laya.Vector3(0, 0, 0), true, false);
        this.taxi.name = "taxi";
        this.sceneRun.addChild(this.taxi);
        this.taxi.addComponent(Laya.PhysicsCollider);
        var rigid = this.taxi.addComponent(Laya.Rigidbody3D);
        // //有刚体的shape要加在刚体上
        rigid.colliderShape = new Laya.BoxColliderShape(1, 0.5, 2.8);
        // //添加一个重量
        rigid.mass = 20;
        // //给球添加弹力
        rigid.restitution = 0.01;
        // // 给球添加滚动摩擦力
        rigid.rollingFriction = 0.2;
        rigid.isKinematic = true;
        //    rigid.isTrigger = true;
        //给球添加脚本
        this.taxi.addComponent(CarScript_1.CarScript);
        //给球一个名字 方便识别
        this.taxi.name = "taxi";
    };
    GameUI.prototype.zhongLoad = function () {
        this.zhongBuilding = Laya.loader.getRes("res/zhong/layaScene.lh");
        this.zhongBuilding.transform.position = new Laya.Vector3(-35, 28, -35);
        this.zhongBuilding.transform.scale = new Laya.Vector3(0.4, 0.4, 0.4);
        this.sceneRun.addChild(this.zhongBuilding);
        var zhongBuilding1 = Laya.Sprite3D.instantiate(this.zhongBuilding, this.sceneRun, false, new Laya.Vector3(28, 28, -35));
        this.sceneRun.addChild(zhongBuilding1);
        zhongBuilding1.transform.rotate(new Laya.Vector3(0, 180, 0), true, false);
    };
    GameUI.prototype.guoqiLoad = function () {
        this.guoqi = Laya.loader.getRes("res/guoqi/layaScene.lh");
        this.guoqi.transform.position = new Laya.Vector3(17, 1, -14);
        this.guoqi.transform.scale = new Laya.Vector3(1, 1, 1);
        this.sceneRun.addChild(this.guoqi);
        var guoqi1 = Laya.Sprite3D.instantiate(this.guoqi, this.sceneRun, false, new Laya.Vector3(-25, 1, 6));
        this.sceneRun.addChild(guoqi1);
        guoqi1.transform.rotate(new Laya.Vector3(0, 180, 0), true, false);
    };
    GameUI.prototype.icbcLoad = function () {
        this.icbc = Laya.loader.getRes("res/icbc/layaScene.lh");
        this.icbc.transform.position = new Laya.Vector3(11.8, 2.2, -75);
        this.icbc.transform.scale = new Laya.Vector3(0.4, 0.4, 0.4);
        this.sceneRun.addChild(this.icbc);
        var zhongBuilding1 = Laya.Sprite3D.instantiate(this.icbc, this.sceneRun, false, new Laya.Vector3(-19, 2.2, -60));
        this.sceneRun.addChild(zhongBuilding1);
        zhongBuilding1.transform.rotate(new Laya.Vector3(0, 180, 0), true, false);
    };
    GameUI.prototype.dogLoad = function () {
        //实例化加载并创建好的3D对象
        this.man = Laya.loader.getRes("res/dog1312311/layaScene.lh");
        this.man.transform.position = new Laya.Vector3(-3.2, 0.9, 30 + a);
        this.man.transform.scale = new Laya.Vector3(2.5, 2.5, 2.5);
        this.man.transform.rotate(new Laya.Vector3(0, 180, 0), true, false);
        this.sceneRun.addChild(this.man);
        this.man.addComponent(Laya.PhysicsCollider);
        //     var material:Laya.BlinnPhongMaterial = meshSprite3D.meshRenderer.sharedMaterial as Laya.BlinnPhongMaterial;
        // //     //修改材质的反射颜色，让模型偏红
        //     material.albedoColor = new Laya.Vector4(1,0,0,1); 
        var rigid = this.man.addComponent(Laya.Rigidbody3D);
        // //有刚体的shape要加在刚体上
        rigid.colliderShape = new Laya.BoxColliderShape(1, 0.8, 0.8);
        // //添加一个重量
        rigid.mass = 20;
        // //给球添加弹力
        rigid.restitution = 0.01;
        // // 给球添加滚动摩擦力
        rigid.rollingFriction = 0.2;
        rigid.isKinematic = true;
        rigid.isTrigger = true;
        //给球添加脚本
        this.man.addComponent(BallScript_1.BallScript);
        //给球一个名字 方便识别
        this.man.name = "JC";
        this.gameStart();
    };
    GameUI.prototype.gameStart = function () {
        Laya.timer.frameLoop(1, this, function aaa() {
            // console.log("score:" + parseInt(Laya.LocalStorage.getItem("score")));
            // console.log("+++++++++++++++++++++++++++++")
            // this.zjInput.text = parseInt(Laya.LocalStorage.getItem("score"))s
            if (Laya.LocalStorage.getItem("gameover") == "yes") {
                gameIsOver = true;
                Laya.LocalStorage.setItem("gameover", "no");
                // var animator = this.man.getChildAt(0).getComponent(Laya.Animator) as Laya.Animator;
                //  animator.play("Dead");
                // Laya.timer.pause();
                var kk = 0;
                var state = 0;
                var roZ = 0;
                Laya.timer.frameLoop(1, this, function aaa() {
                    kk = kk + 1;
                    a = a + 1.6;
                    c = c + 0.3;
                    console.log(1121121);
                    if (kk == 30 || kk > 30) {
                        Laya.timer.clear(this, aaa);
                        Laya.timer.pause();
                        Laya.Browser.window.location.reload();
                        // this.removeSelf();
                        // var sui = new StartUI();
                        // Laya.stage.addChild(sui);
                    }
                });
            }
            if (Laya.LocalStorage.getItem("rocket") == "yes") {
                rocketState = true;
                Laya.LocalStorage.setItem("rocket", "no");
                this.rocketing.transform.position = new Laya.Vector3(this.man.transform.position.x + 0.2, this.man.transform.position.y + 0.5, this.man.transform.position.z - 5.5);
                this.rocketing.transform.scale = new Laya.Vector3(0.3, 0.3, 0.3);
                this.sceneRun.addChild(this.rocketing);
            }
            if (rocketState) {
                this.rocketing.transform.position = new Laya.Vector3(this.man.transform.position.x + 0.2, this.man.transform.position.y + 0.5, this.man.transform.position.z - 5.5);
                r = 10;
                rocketTotal = rocketTotal + 0.5;
                if (rocketTotal > 500) {
                    rocketTotal = 0;
                    rocketState = false;
                    this.sceneRun.removeChild(this.rocketing);
                    r = 0;
                    for (var i = 0; i < rocketCoinArr.length; i++) {
                        var sprite1 = rocketCoinArr[i];
                        sprite1.removeSelf();
                    }
                    rocketCoinArr.splice(0, rocketCoinArr.length);
                }
            }
            this.man.transform.position = (new Laya.Vector3(-3.2 + b, 0.9 + c + r, 30 + (a -= 0.5)));
            //160
            // camera.transform.lookAt(this.man.transform.position,new Laya.Vector3(0,0,0));
            if (!gameIsOver) {
                this.camera.transform.position = new Laya.Vector3(-3.5, 13 + r, 60 + a);
            }
            //  rigid.applyForce(new Laya.Vector3(0,0,-50),null);
            // this.txt.text  = obstacleTotal.length;
            distanceTotal = distanceTotal + 0.5;
            distanceBuildTotal = distanceBuildTotal + 0.5;
            this.txt.text = "测试分数:" + Laya.LocalStorage.getItem("score");
            if (distanceTotal > 60 || distanceTotal == 60) {
                buildZ = buildZ + 60;
                distanceTotal = 0.0;
                if (!rocketState) {
                    this.buildObstacleAction();
                }
                else {
                    this.rocketBuildAction();
                }
                this.buildLightAction();
            }
            if (distanceBuildTotal > 25 || distanceBuildTotal == 25) {
                distanceBuildTotal = 0.0;
                this.buildingRandomAction();
            }
            roadTotal = roadTotal + 0.5;
            if (roadTotal > 136) {
                roadTotal = 0;
                var roadSprite = roadArr[roadCurrent];
                roadSprite.transform.position = new Laya.Vector3(0, 0, roadChangeNumber -= 136.5);
                roadCurrent = roadCurrent + 1;
                if (roadCurrent == 3) {
                    roadCurrent = 0;
                }
            }
        });
    };
    GameUI.prototype.rocketBuildAction = function () {
        var i = Math.round(Math.random() * (3 - 1));
        var offsetX = -9 + i * 6;
        rocketCoinArr.push(this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.coin, this.sceneRun, false, new Laya.Vector3(offsetX, 2 + r, -(buildZ - 120)))));
        rocketCoinArr.push(this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.coin, this.sceneRun, false, new Laya.Vector3(offsetX, 2 + r, -(buildZ - 110)))));
        rocketCoinArr.push(this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.coin, this.sceneRun, false, new Laya.Vector3(offsetX, 2 + r, -(buildZ - 100)))));
        rocketCoinArr.push(this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.coin, this.sceneRun, false, new Laya.Vector3(offsetX, 2 + r, -(buildZ - 90)))));
        rocketCoinArr.push(this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.coin, this.sceneRun, false, new Laya.Vector3(offsetX, 2 + r, -(buildZ - 80)))));
    };
    GameUI.prototype.rocketLoad = function () {
        this.rocket = Laya.loader.getRes("res/rocket/layaScene.lh");
        this.rocket.transform.position = new Laya.Vector3(-3, 2, -15);
        this.rocket.transform.scale = new Laya.Vector3(0.1, 0.1, 0.1);
        this.sceneRun.addChild(this.rocket);
        var phy = this.rocket.addComponent(Laya.PhysicsCollider);
        var rigid = this.rocket.addComponent(Laya.Rigidbody3D);
        // //有刚体的shape要加在刚体上
        rigid.colliderShape = new Laya.BoxColliderShape(2, 3, 2);
        // //添加一个重量
        rigid.mass = 20;
        // //给球添加弹力
        rigid.restitution = 0.01;
        // // 给球添加滚动摩擦力
        rigid.rollingFriction = 0.2;
        rigid.isKinematic = true;
        //给球添加脚本
        this.rocket.addComponent(RocketScript_1.RocketScript);
        //给球一个名字 方便识别
        this.rocket.name = "火箭";
        this.rocketing = Laya.Sprite3D.instantiate(this.rocket, this.sceneRun, false, new Laya.Vector3(-3, 2, -30));
        this.rocketing.transform.rotate(new Laya.Vector3(-90, 0, 0), true, false);
        this.sceneRun.removeChild(this.rocketing);
        // this.rocketing._destroyAllComponent();
    };
    GameUI.prototype.coinLoad = function () {
        //实例化加载并创建好的3D对象
        this.coin = Laya.loader.getRes("res/coin/layaScene.lh");
        this.coin.transform.position = new Laya.Vector3(-3, 2, -20);
        this.coin.transform.scale = new Laya.Vector3(0.5, 0.5, 0.5);
        this.coin.transform.rotate(new Laya.Vector3(0, 180, 0), true, false);
        this.sceneRun.addChild(this.coin);
        var phy = this.coin.addComponent(Laya.PhysicsCollider);
        //     var material:Laya.BlinnPhongMaterial = meshSprite3D.meshRenderer.sharedMaterial as Laya.BlinnPhongMaterial;
        // //     //修改材质的反射颜色，让模型偏红
        //     material.albedoColor = new Laya.Vector4(1,0,0,1); 
        var rigid = this.coin.addComponent(Laya.Rigidbody3D);
        // //有刚体的shape要加在刚体上
        rigid.colliderShape = new Laya.BoxColliderShape(0.6, 0.6, 0.3);
        // //添加一个重量
        rigid.mass = 20;
        // //给球添加弹力
        rigid.restitution = 0.01;
        // // 给球添加滚动摩擦力
        rigid.rollingFriction = 0.2;
        rigid.isKinematic = true;
        //给球添加脚本
        this.coin.addComponent(CoinScript_1.CoinScript);
        //给球一个名字 方便识别
        this.coin.name = "金币";
        this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.coin, this.sceneRun, false, new Laya.Vector3(-3, 2, -30)));
        this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.coin, this.sceneRun, false, new Laya.Vector3(-3, 2, -40)));
        this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.coin, this.sceneRun, false, new Laya.Vector3(-3, 2, -50)));
        this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.coin, this.sceneRun, false, new Laya.Vector3(-3, 2, -60)));
        var a = 0;
    };
    GameUI.prototype.buildLightAction = function () {
        var lamp1 = this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.lamp, this.sceneRun, false, new Laya.Vector3(8, 0, lightTotal - 10)));
        var lamp2 = this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.lamp, this.sceneRun, false, new Laya.Vector3(-15, 0, lightTotal - 10)));
        lightArr.push(lamp1);
        lightArr.push(lamp2);
        lightTotal = lightTotal - 60;
        if (lightArr.length > 30) {
            var sprite1 = lightArr[0];
            var sprite2 = lightArr[1];
            lightArr.splice(0, 2);
            sprite1.removeSelf();
            sprite2.removeSelf();
        }
    };
    GameUI.prototype.buildingRandomAction = function () {
        if (build3DArr.length == 0) {
            var buildNoL = Math.round(Math.random() * (buildingRandomArr.length - 1));
            var buildNoR = Math.round(Math.random() * (buildingRandomArr.length - 1));
            this.buildingAction(0, parseInt(buildingRandomArr[buildNoL]));
            this.buildingAction(1, parseInt(buildingRandomArr[buildNoR]));
        }
        else {
            var buildNoL = Math.round(Math.random() * (buildingRandomArr.length - 1));
            var buildNoR = Math.round(Math.random() * (buildingRandomArr.length - 1));
            this.buildingAction(0, parseInt(buildingRandomArr[buildNoL]));
            this.buildingAction(1, parseInt(buildingRandomArr[buildNoR]));
            if (build3DArr.length > 40) {
                var sprite1 = build3DArr[0];
                var sprite2 = build3DArr[1];
                build3DArr.splice(0, 2);
                if (sprite1 && sprite2) {
                    sprite1.removeSelf();
                    sprite2.removeSelf();
                }
            }
        }
    };
    GameUI.prototype.buildObstacleAction = function () {
        if (obstacleTotal.length == 0) {
            var roadNo = Math.round(Math.random() * 2);
            this.randomRoadTool(roadNo);
        }
        else {
            var arr = obstacleTotal[obstacleTotal.length - 1];
            var newArr = [];
            for (var i = 0; i < arr.left; i++) {
                if (parseInt(arr[i]) == 0 || parseInt(arr[i]) == 1) {
                    newArr.push(i);
                }
            }
            var number = Math.round(Math.random() * (newArr.length - 1));
            if (newArr[number] == 0) {
                this.randomRoadTool(0);
            }
            else if (newArr[number] == 1) {
                this.randomRoadTool(1);
            }
            else if (newArr[number] == 2) {
                this.randomRoadTool(2);
            }
        }
    };
    GameUI.prototype.randomRoadTool = function (roadNo) {
        if (roadNo == 0) {
            var roadNo1 = Math.round(Math.random() * (left.length - 1));
            var roadSelected = left[roadNo1];
            this.buildTool(roadSelected);
        }
        else if (roadNo == 1) {
            var roadNo1 = Math.round(Math.random() * (center.length - 1));
            var roadSelected = center[roadNo1];
            this.buildTool(roadSelected);
        }
        else if (roadNo == 2) {
            var roadNo1 = Math.round(Math.random() * (right.length - 1));
            var roadSelected = right[roadNo1];
            this.buildTool(roadSelected);
        }
    };
    GameUI.prototype.buildTool = function (arr) {
        var rocket = 0;
        for (var i = 0; i < 3; i++) {
            var number = arr[i];
            var arrr = [];
            if (number == 0) {
                var rocketNum = Math.round(Math.random() * (25 - 1));
                if (rocketNum == 9) {
                    if (rocket == 0) {
                        rocket = 1;
                        var offsetX = -9 + i * 6;
                        arrr.push(this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.rocket, this.sceneRun, false, new Laya.Vector3(offsetX, 2, -(buildZ + 10)))));
                    }
                }
            }
            else if (number == 1) {
                var offsetX = -9 + i * 6;
                arrr.push(this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.coin, this.sceneRun, false, new Laya.Vector3(offsetX, 2, -(buildZ + 10)))));
                arrr.push(this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.coin, this.sceneRun, false, new Laya.Vector3(offsetX, 2, -(buildZ + 20)))));
                arrr.push(this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.coin, this.sceneRun, false, new Laya.Vector3(offsetX, 2, -(buildZ + 30)))));
                arrr.push(this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.coin, this.sceneRun, false, new Laya.Vector3(offsetX, 2, -(buildZ + 40)))));
                arrr.push(this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.coin, this.sceneRun, false, new Laya.Vector3(offsetX, 2, -(buildZ + 50)))));
            }
            else if (number == 2) {
                var offsetX = -9.5 + i * 6.2;
                // new Laya.Vector3(2,5,-100);
                arrr.push(this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.taxi, this.sceneRun, false, new Laya.Vector3(offsetX, 1, -(buildZ + 20)))));
            }
            else if (number == 3) {
                var offsetX = -8.5 + i * 6;
                // new Laya.Vector3(2,5,-100);
                arrr.push(this.sceneRun.addChild(Laya.Sprite3D.instantiate(this.bigTaxi, this.sceneRun, false, new Laya.Vector3(offsetX, 2, -(buildZ + 20)))));
            }
        }
        obstacleSpride.push(arrr);
        if (obstacleSpride.length > 20) {
            var subArr = obstacleSpride[0];
            for (var i = 0; i < subArr.length; i++) {
                var a = subArr[i];
                console.log(a);
                a.removeSelf();
            }
            obstacleSpride.splice(0, 1);
        }
    };
    GameUI.prototype.onAniComplete = function () {
        alert(123);
    };
    GameUI.prototype.bbb = function () {
        if (Laya.stage.mouseX > x && ((Math.abs(Laya.stage.mouseY - y) / (Laya.stage.mouseX - x)) < 1)) {
            if (Laya.stage.mouseX - x > 20) {
                if (directionInt == 2) {
                }
                else {
                    directionInt = directionInt + 1;
                    // b = b + 6;
                    // alert("右");
                    var kk = 0;
                    var state = 0;
                    Laya.timer.frameLoop(1, this, function aaa() {
                        kk = kk + 0.5;
                        b = b + 0.5;
                        if ((c > 1.2 || c == 1.2) || (state == 1)) {
                            state = 1;
                            c = c - 0.2;
                        }
                        else {
                            c = c + 0.2;
                        }
                        if (kk == 6) {
                            c = 0;
                            Laya.timer.clear(this, aaa);
                        }
                    });
                }
            }
        }
        else if (Laya.stage.mouseX < x && ((Math.abs(Laya.stage.mouseY - y) / (x - Laya.stage.mouseX)) < 1)) {
            if (x - Laya.stage.mouseX > 20) {
                if (directionInt == 0) {
                }
                else {
                    directionInt = directionInt - 1;
                    // b = b - 6;
                    // alert("左");
                    var kk = 0;
                    var state = 0;
                    Laya.timer.frameLoop(1, this, function aaa() {
                        kk = kk + 0.5;
                        b = b - 0.5;
                        if ((c > 1.2 || c == 1.2) || (state == 1)) {
                            state = 1;
                            c = c - 0.2;
                        }
                        else {
                            c = c + 0.2;
                        }
                        if (kk == 6) {
                            c = 0;
                            Laya.timer.clear(this, aaa);
                        }
                    });
                }
            }
        }
        else if (Laya.stage.mouseY < y && ((Math.abs(Laya.stage.mouseX - x) / (y - Laya.stage.mouseY)) < 1)) {
            if (y - Laya.stage.mouseY > 20) {
                // c = c + 10;
                // alert("上");
                var kk = 0;
                var state = 0;
                var roZ = 0.9;
                Laya.timer.frameLoop(1, this, function aaa() {
                    kk = kk + 0.18;
                    if ((c > 10 || c == 10) || (state == 1)) {
                        state = 1;
                        roZ = roZ - 0.038;
                        c = c - 0.7 / roZ;
                    }
                    else {
                        roZ = roZ + 0.08;
                        c = c + 0.7 / roZ;
                    }
                    if (kk == 10 || kk > 10) {
                        c = 0;
                        Laya.timer.clear(this, aaa);
                    }
                });
            }
        }
        else if (Laya.stage.mouseY > y && ((Math.abs(Laya.stage.mouseX - x) / (Laya.stage.mouseY - y)) < 1)) {
            if (Laya.stage.mouseY - y > 20) {
                // alert("下");
                // c = c - 10;
            }
        }
        Laya.stage.off(Laya.Event.MOUSE_UP, this, this.bbb);
    };
    return GameUI;
}(layaMaxUI_1.ui.test.TestSceneUI));
exports.default = GameUI;
},{"../ui/layaMaxUI":11,"./BallScript":3,"./CarScript":4,"./CoinScript":5,"./HomeUI":7,"./RocketScript":8}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var HomeUI = /** @class */ (function (_super) {
    __extends(HomeUI, _super);
    function HomeUI() {
        var _this = _super.call(this) || this;
        console.log("homeUI加载中");
        return _this;
    }
    return HomeUI;
}(layaMaxUI_1.ui.test.HomeUI));
exports.default = HomeUI;
},{"./../ui/layaMaxUI":11}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RocketScript = /** @class */ (function (_super) {
    __extends(RocketScript, _super);
    function RocketScript() {
        return _super.call(this) || this;
    }
    /**
     * 当其他碰撞器进入绑定物体碰撞器时触发（子弹进入物品时）
     * 注：如相对移动速度过快，可能直接越过
     */
    RocketScript.prototype.onTriggerEnter = function (other) {
        //  console.log("触发器enter" + this.owner.name);
        Laya.LocalStorage.setItem("rocket", "yes");
        this.owner.removeSelf();
        // console.log(other);
    };
    /**
     * 当其他碰撞器进入绑定物体碰撞器后逐帧触发（子弹在物品内时）
     * 注：如相对移动速度过快，可能直接越过
     */
    RocketScript.prototype.onTriggerStay = function (other) {
        // console.log("触发器stay" + this.owner.name );
    };
    /**
     * 当其他碰撞器退出绑定物体碰撞器时逐帧触发（子弹穿出物品时）
     * 注：如相对移动速度过快，可能直接越过
     */
    RocketScript.prototype.onTriggerExit = function (other) {
        // console.log("触发器exit" + this.owner.name);
    };
    /**
     * 与触发器相同
     */
    RocketScript.prototype.onCollisionEnter = function (collision) {
        // console.log("碰撞器enter" + this.owner.name);
        this.owner.removeSelf();
    };
    RocketScript.prototype.onCollisionStay = function (collision) {
        // console.log("碰撞器stay" + this.owner.name );
    };
    RocketScript.prototype.onCollisionExit = function (collision) {
        // alert("碰撞器exit" + this.owner.name);
    };
    RocketScript.prototype.onDisable = function () {
        // alert("脚本已被移除");
    };
    return RocketScript;
}(Laya.Script3D));
exports.RocketScript = RocketScript;
},{}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var HomeUI = /** @class */ (function (_super) {
    __extends(HomeUI, _super);
    function HomeUI() {
        var _this = _super.call(this) || this;
        console.log("signUI加载中");
        _this.onAwake = _this.awake;
        return _this;
    }
    HomeUI.prototype.awake = function () {
        Laya.loader.load("res/atlas/ui.atlas", Laya.Handler.create(this, this.onLoaded));
    };
    HomeUI.prototype.onLoaded = function () {
        var _this = this;
        this.no1.on("click", this, function () {
            console.log(_this.no1);
            // this.no1.texture.url = "/main/yes1.png"
            _this.no1.graphics.clear();
            var texture = Laya.loader.getRes("main/yes1.png");
            _this.no1.loadImage('main/yes1.png');
        });
    };
    return HomeUI;
}(layaMaxUI_1.ui.test.signUIUI));
exports.default = HomeUI;
},{"./../ui/layaMaxUI":11}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var HomeUI = /** @class */ (function (_super) {
    __extends(HomeUI, _super);
    function HomeUI() {
        var _this = _super.call(this) || this;
        _this.onAwake = _this.awake;
        console.log("homeUI加载中");
        return _this;
    }
    HomeUI.prototype.awake = function () {
        console.log("开始页面加载完成");
        this.buttonStart.on('click', this, function () {
            console.log('开始游戏');
        });
    };
    return HomeUI;
}(layaMaxUI_1.ui.test.StartUI));
exports.default = HomeUI;
},{"./../ui/layaMaxUI":11}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var View = Laya.View;
var Dialog = Laya.Dialog;
var Scene = Laya.Scene;
var ui;
(function (ui) {
    var test;
    (function (test) {
        var HomeUI = /** @class */ (function (_super) {
            __extends(HomeUI, _super);
            function HomeUI() {
                return _super.call(this) || this;
            }
            HomeUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/Home");
            };
            return HomeUI;
        }(View));
        test.HomeUI = HomeUI;
        var signUIUI = /** @class */ (function (_super) {
            __extends(signUIUI, _super);
            function signUIUI() {
                return _super.call(this) || this;
            }
            signUIUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/signUI");
            };
            return signUIUI;
        }(Dialog));
        test.signUIUI = signUIUI;
        var StartUI = /** @class */ (function (_super) {
            __extends(StartUI, _super);
            function StartUI() {
                return _super.call(this) || this;
            }
            StartUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/Start");
            };
            return StartUI;
        }(View));
        test.StartUI = StartUI;
        var TestSceneUI = /** @class */ (function (_super) {
            __extends(TestSceneUI, _super);
            function TestSceneUI() {
                return _super.call(this) || this;
            }
            TestSceneUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/TestScene");
            };
            return TestSceneUI;
        }(Scene));
        test.TestSceneUI = TestSceneUI;
    })(test = ui.test || (ui.test = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
